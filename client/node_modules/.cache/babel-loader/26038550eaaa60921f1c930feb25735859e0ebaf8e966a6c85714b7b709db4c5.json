{"ast":null,"code":"var _jsxFileName = \"/home/hp/monday-oauth (copy)/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from 'axios';\nimport './App.css';\nimport LandingPage from \"./components/LandingPage.js\";\nimport MondayCard from \"./components/MondayCard.js\";\n//https://23332f08554e13c5.cdn2.monday.app\n//http://localhost:3000\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const monday = mondaySdk();\n  const [isauthorized, setIsAuthorized] = useState(false);\n  const [isxeroauthorized, setIsXeroAuthorized] = useState(false);\n  const [token, setToken] = useState('');\n  let columnIDs = [];\n  useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search);\n    const authorized = urlParams.get('code');\n    if (authorized) {\n      axios.get(`http://localhost:3001/callback?code=${authorized}`).then(response => {\n        const accessToken = response.data.tokenSet.access_token;\n        monday.setToken(accessToken);\n        if (accessToken) {\n          setIsXeroAuthorized(true);\n          setToken(accessToken);\n        }\n      }).catch(error => {\n        console.error('Error exchanging code for tokens:', error);\n      });\n    }\n  }, [monday]);\n  useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search);\n    const authorizationCode = urlParams.get('code');\n    if (authorizationCode) {\n      axios.get(`http://localhost:3001/monday-callback?code=${authorizationCode}`).then(response => {\n        const accessToken = response.data.access_token;\n        monday.setToken(accessToken);\n        if (accessToken) {\n          setToken(accessToken);\n          setIsAuthorized(true);\n        }\n      }).catch(error => {\n        console.error('Error exchanging code for tokens:', error);\n      });\n    }\n  }, [monday]);\n  const fetchBoardId = async boardName => {\n    try {\n      const response = await fetch(\"https://api.monday.com/v2\", {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `${token}`\n        },\n        body: JSON.stringify({\n          query: `\n            {\n              me {\n                boards {\n                  id\n                  name\n                }\n              }\n            }\n          `\n        })\n      });\n      const res = await response.json();\n      console.log(res);\n      const foundBoard = res.data.me.boards.find(board => board.name === boardName);\n      if (foundBoard) {\n        return foundBoard.id;\n      } else {\n        console.error(`Board '${boardName}' not found.`);\n        return null;\n      }\n    } catch (error) {\n      console.error('Error fetching board ID:', error);\n      return null;\n    }\n  };\n  const fetchInvoices = async () => {\n    try {\n      const response = await fetch(`http://localhost:3001/invoice`);\n      const data = await response.json();\n      const Invoices = data.invoices;\n      Invoices.forEach(async invoice => {\n        const columnValues = [];\n        columnIDs.forEach(({\n          id,\n          columnName\n        }) => {\n          columnValues.push(`\\\\\"${id}\\\\\":\\\\\"${invoice[columnName.toLowerCase().replace(/\\s/g, '')]}\\\\\"`);\n        });\n        const columnValuesString = `{${columnValues.join(',')}}`;\n        const query = `mutation {\n            create_item(\n              board_id: ${boardId},\n              item_name: \"Invoices\",\n              column_values: \"${columnValuesString}\"\n            ) {\n              id\n            }\n          }`;\n        try {\n          const response = await fetch(\"https://api.monday.com/v2\", {\n            method: \"post\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              'Authorization': `${token}`\n            },\n            body: JSON.stringify({\n              query: query\n            })\n          });\n          const res = await response.json();\n          console.log(res);\n        } catch (error) {\n          console.error(\"Error creating invoices\", error);\n        }\n      });\n      window.alert('Invoices imported successfully!');\n    } catch (error) {\n      console.error(\"Error fetching invoices:\", error);\n      window.alert('Failed to import invoices. Please try again.');\n    }\n  };\n  const createColumns = async () => {\n    const userInputBoardName = prompt('Please enter the board name for creating columns:');\n    if (!userInputBoardName) {\n      window.alert('Board name cannot be empty.');\n      return;\n    }\n    const boardId = await fetchBoardId(userInputBoardName.trim());\n    if (boardId) {\n      const columnsToCreate = ['Invoice Number', 'Reference', 'Status', 'Amount Due'];\n      let createdColumnsCount = 0;\n      let columnsExist = false;\n      try {\n        const response = await fetch(\"https://api.monday.com/v2\", {\n          method: 'post',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `${token}`\n          },\n          body: JSON.stringify({\n            query: `\n            {\n              boards(ids: ${boardId}) {\n                columns {\n                  id\n                  title\n                }\n              }\n            }\n          `\n          })\n        });\n        const res = await response.json();\n        const existingColumns = res.data.boards[0].columns.map(column => column.title);\n        for (const columnName of columnsToCreate) {\n          if (!existingColumns.includes(columnName)) {\n            const query = `\n            mutation {\n              create_column (\n                board_id: ${boardId},\n                title: \"${columnName}\",\n                column_type: text\n              ) {\n                id\n              }\n            }\n          `;\n            try {\n              const response = await fetch(\"https://api.monday.com/v2\", {\n                method: 'post',\n                headers: {\n                  'Content-Type': 'application/json',\n                  'Authorization': `${token}`\n                },\n                body: JSON.stringify({\n                  'query': query\n                })\n              });\n              const res = await response.json();\n              const {\n                id\n              } = res.data.create_column;\n              console.log(`Created column '${columnName}':`, id);\n              columnIDs.push({\n                columnName,\n                id\n              });\n              createdColumnsCount++;\n              if (createdColumnsCount === columnsToCreate.length) {\n                window.alert('All columns created successfully!');\n              }\n            } catch (error) {\n              console.error(`Error creating column '${columnName}':`, error);\n            }\n          } else {\n            console.log(`Column '${columnName}' already exists.`);\n            columnsExist = true;\n          }\n        }\n        if (columnsExist) {\n          window.alert('Columns already exist.');\n        }\n      } catch (error) {\n        console.error('Error fetching columns:', error);\n        window.alert('Failed to create columns. Please try again.');\n      }\n    } else {\n      window.alert(`Board '${userInputBoardName}' not found. Cannot create columns.`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isxeroauthorized ? /*#__PURE__*/_jsxDEV(MondayCard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 9\n    }, this) : isauthorized ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n        class: \"navbar navbar-expand-md   pt-5 pb-3  mb-5\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"container-xxl\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"./favicon.ico\",\n            alt: \"Logo\",\n            className: \" me-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            class: \"text-dark fs-4 fw-bold\",\n            children: \"Xero Integration\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"collapse navbar-collapse justify-content-end align-center \",\n            id: \"main-nav\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container  d-grid align-items-center\",\n        style: {\n          height: \" 60vh\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row justify-content-center align-items-center \",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-8 col-md-6 mb-3\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"card justify-content-center align-items-center d-grid border-0 shadow\",\n              style: {\n                width: '18 rem',\n                height: '300px'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"card-body \",\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  class: \"fw-bold mb-3 card-title \",\n                  children: \"Fetch your Invoices\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 279,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: fetchInvoices,\n                  className: \" btn btn-primary\",\n                  children: \"Import Invoices\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-8 col-md-6 mb-3\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"card justify-content-center align-items-center d-grid border-0 shadow\",\n              style: {\n                width: '18 rem',\n                height: '300px'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"card-body \",\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  class: \"fw-bold mb-3 card-title \",\n                  children: \"Create columns on monday\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 289,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: createColumns,\n                  className: \" btn btn-primary\",\n                  children: \"Create Columns\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(LandingPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 250,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"T4k2E51d4lfmeZl+ZJAytPIO7rU=\");\n_c = App;\n;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","LandingPage","MondayCard","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","monday","mondaySdk","isauthorized","setIsAuthorized","isxeroauthorized","setIsXeroAuthorized","token","setToken","columnIDs","urlParams","URLSearchParams","window","location","search","authorized","get","then","response","accessToken","data","tokenSet","access_token","catch","error","console","authorizationCode","fetchBoardId","boardName","fetch","method","headers","body","JSON","stringify","query","res","json","log","foundBoard","me","boards","find","board","name","id","fetchInvoices","Invoices","invoices","forEach","invoice","columnValues","columnName","push","toLowerCase","replace","columnValuesString","join","boardId","alert","createColumns","userInputBoardName","prompt","trim","columnsToCreate","createdColumnsCount","columnsExist","existingColumns","columns","map","column","title","includes","create_column","length","children","fileName","_jsxFileName","lineNumber","columnNumber","class","src","alt","className","style","height","width","onClick","_c","$RefreshReg$"],"sources":["/home/hp/monday-oauth (copy)/client/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from 'axios';\nimport './App.css';\nimport LandingPage from \"./components/LandingPage.js\"\nimport MondayCard  from \"./components/MondayCard.js\"\n//https://23332f08554e13c5.cdn2.monday.app\n//http://localhost:3000\n\nfunction App() {\n  const monday = mondaySdk();\n  const [isauthorized, setIsAuthorized] = useState(false);\n  const [isxeroauthorized, setIsXeroAuthorized] = useState(false);\n  const [token, setToken] = useState('');\n  let columnIDs = [];\n  \n\n  useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search);\n    const authorized = urlParams.get('code');\n\n    if (authorized) {\n      axios.get(`http://localhost:3001/callback?code=${authorized}`)\n        .then((response) => {\n          const accessToken = response.data.tokenSet.access_token;\n          monday.setToken(accessToken);\n\n          if (accessToken) {\n            setIsXeroAuthorized(true);\n            setToken(accessToken);\n          }\n        })\n        .catch((error) => {\n          console.error('Error exchanging code for tokens:', error);\n        });\n    }\n    \n  }, [monday]);\n\n  useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search);\n    const authorizationCode = urlParams.get('code');\n\n    if (authorizationCode) {\n      axios.get(`http://localhost:3001/monday-callback?code=${authorizationCode}`)\n        .then((response) => {\n          const accessToken = response.data.access_token;\n          monday.setToken(accessToken);\n\n          if (accessToken) {\n            setToken(accessToken);\n            setIsAuthorized(true);\n          }\n        })\n        .catch((error) => {\n          console.error('Error exchanging code for tokens:', error);\n        });\n    }\n  }, [monday]);\n\n  const fetchBoardId = async (boardName) => {\n    try {\n      const response = await fetch(\"https://api.monday.com/v2\", {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `${token}`,\n        },\n        body: JSON.stringify({\n          query: `\n            {\n              me {\n                boards {\n                  id\n                  name\n                }\n              }\n            }\n          `,\n        }),\n      });\n      const res = await response.json();\n      console.log(res);\n      const foundBoard = res.data.me.boards.find(board => board.name === boardName);\n  \n      if (foundBoard) {\n        return foundBoard.id;\n      } else {\n        console.error(`Board '${boardName}' not found.`);\n        return null;\n      }\n    } catch (error) {\n      console.error('Error fetching board ID:', error);\n      return null;\n    }\n  };\n\n  const fetchInvoices = async () => {\n \n      try {\n        const response = await fetch(`http://localhost:3001/invoice`);\n        const data = await response.json();\n        \n        const Invoices = data.invoices;\n  \n        Invoices.forEach(async (invoice) => {\n          const columnValues = [];\n          columnIDs.forEach(({ id, columnName }) => {\n            columnValues.push(`\\\\\"${id}\\\\\":\\\\\"${invoice[columnName.toLowerCase().replace(/\\s/g, '')]}\\\\\"`);\n          });\n  \n          const columnValuesString = `{${columnValues.join(',')}}`;\n\n          const query = `mutation {\n            create_item(\n              board_id: ${boardId},\n              item_name: \"Invoices\",\n              column_values: \"${columnValuesString}\"\n            ) {\n              id\n            }\n          }`;\n        \n          try {\n            const response = await fetch(\"https://api.monday.com/v2\", {\n              method: \"post\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n                'Authorization': `${token}`,\n              },\n              body: JSON.stringify({\n                query: query,\n              }),\n            });\n            const res = await response.json();\n            console.log(res);\n          } catch (error) {\n            console.error(\"Error creating invoices\", error);\n          }\n        });\n        window.alert('Invoices imported successfully!');\n      } catch (error) {\n        console.error(\"Error fetching invoices:\", error);\n        window.alert('Failed to import invoices. Please try again.');\n      }\n   \n  };\n\n  const createColumns = async () => {\n\n    const userInputBoardName = prompt('Please enter the board name for creating columns:');\n  \n  if (!userInputBoardName) {\n    window.alert('Board name cannot be empty.');\n    return;\n  }\n\n const  boardId = await fetchBoardId(userInputBoardName.trim());\n  if (boardId) {\n  \n    const columnsToCreate = ['Invoice Number', 'Reference', 'Status', 'Amount Due'];\n    let createdColumnsCount = 0;\n    let columnsExist = false;\n  \n    try {\n      const response = await fetch(\"https://api.monday.com/v2\", {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `${token}`,\n        },\n        body: JSON.stringify({\n          query: `\n            {\n              boards(ids: ${boardId}) {\n                columns {\n                  id\n                  title\n                }\n              }\n            }\n          `,\n        }),\n      });\n      const res = await response.json();\n  \n      const existingColumns = res.data.boards[0].columns.map(column => column.title);\n  \n      for (const columnName of columnsToCreate) {\n        if (!existingColumns.includes(columnName)) {\n          const query = `\n            mutation {\n              create_column (\n                board_id: ${boardId},\n                title: \"${columnName}\",\n                column_type: text\n              ) {\n                id\n              }\n            }\n          `;\n  \n          try {\n            const response = await fetch(\"https://api.monday.com/v2\", {\n              method: 'post',\n              headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `${token}`,\n              },\n              body: JSON.stringify({\n                'query': query,\n              }),\n            });\n            const res = await response.json();\n  \n            const { id } = res.data.create_column;\n            console.log(`Created column '${columnName}':`, id);\n            columnIDs.push({ columnName, id });\n  \n            createdColumnsCount++;\n  \n            if (createdColumnsCount === columnsToCreate.length) {\n              window.alert('All columns created successfully!');\n            }\n          } catch (error) {\n            console.error(`Error creating column '${columnName}':`, error);\n          }\n        } else {\n          console.log(`Column '${columnName}' already exists.`);\n          columnsExist = true;\n        }\n      }\n  \n      if (columnsExist) {\n        window.alert('Columns already exist.');\n      }\n    } catch (error) {\n      console.error('Error fetching columns:', error);\n      window.alert('Failed to create columns. Please try again.');\n    }\n  } else {\n    window.alert(`Board '${userInputBoardName}' not found. Cannot create columns.`);\n  }\n  };\n  \n\n\n\n\n  return (\n    <div>\n      {isxeroauthorized ? (\n        <MondayCard/>\n\n      ) : isauthorized ? (\n        <>\n          <nav class=\"navbar navbar-expand-md   pt-5 pb-3  mb-5\">\n            <div class=\"container-xxl\">\n              <img\n                src=\"./favicon.ico\" \n                alt=\"Logo\"\n                className=\" me-2\" \n              />\n              <span class=\"text-dark fs-4 fw-bold\">Xero Integration</span>\n\n              <div\n                class=\"collapse navbar-collapse justify-content-end align-center \"\n                id=\"main-nav\"\n              >\n               \n              </div>\n            </div>\n          </nav>\n\n          <div className=\"container  d-grid align-items-center\" style={{ height: \" 60vh\" }}>\n            <div className=\"row justify-content-center align-items-center \">\n              <div className=\"col-8 col-md-6 mb-3\">\n                <div class=\"card justify-content-center align-items-center d-grid border-0 shadow\" style={{ width: '18 rem', height: '300px' }}>\n                  <div class=\"card-body \">\n                    <h2 class=\"fw-bold mb-3 card-title \">Fetch your Invoices</h2>\n                    <button onClick={fetchInvoices} className=\" btn btn-primary\">\n                      Import Invoices\n                    </button>\n                  </div>\n                </div>\n              </div>\n              <div className=\"col-8 col-md-6 mb-3\">\n                <div class=\"card justify-content-center align-items-center d-grid border-0 shadow\" style={{ width: '18 rem', height: '300px' }}>\n                  <div class=\"card-body \">\n                    <h2 class=\"fw-bold mb-3 card-title \">Create columns on monday</h2>\n                    <button onClick={createColumns} className=\" btn btn-primary\">\n                      Create Columns\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n\n\n          \n        </>\n      ) : (\n      \n        <LandingPage/>\n      )}\n    </div>\n  );\n\n};\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}