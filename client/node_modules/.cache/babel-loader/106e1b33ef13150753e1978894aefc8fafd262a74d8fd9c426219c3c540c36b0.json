{"ast":null,"code":"var _jsxFileName = \"/home/hp/monday-oauth (copy)/client/src/App.js\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from 'axios';\nimport './App.css';\nimport LandingPage from \"./components/LandingPage.js\";\nimport MondayCard from \"./components/MondayCard.js\";\n//https://23332f08554e13c5.cdn2.monday.app\n//http://localhost:3000\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  const monday = mondaySdk();\n  let columnIDs = [];\n  const fetchBoardId = async boardName => {\n    try {\n      const response = await fetch(\"https://api.monday.com/v2\", {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `${token}`\n        },\n        body: JSON.stringify({\n          query: `\n            {\n              me {\n                boards {\n                  id\n                  name\n                }\n              }\n            }\n          `\n        })\n      });\n      const res = await response.json();\n      console.log(res);\n      const foundBoard = res.data.me.boards.find(board => board.name === boardName);\n      if (foundBoard) {\n        return foundBoard.id;\n      } else {\n        console.error(`Board '${boardName}' not found.`);\n        return null;\n      }\n    } catch (error) {\n      console.error('Error fetching board ID:', error);\n      return null;\n    }\n  };\n  const fetchInvoices = async () => {\n    const userInputBoardName = prompt('Please enter the board name for creating columns:');\n    if (!userInputBoardName) {\n      window.alert('Board name cannot be empty.');\n      return;\n    }\n    const boardId = await fetchBoardId(userInputBoardName.trim());\n    if (boardId) {\n      try {\n        const response = await fetch(`http://localhost:3001/invoice`);\n        const data = await response.json();\n        const Invoices = data.invoices;\n        Invoices.forEach(async invoice => {\n          const columnValues = [];\n          columnIDs.forEach(({\n            id,\n            columnName\n          }) => {\n            columnValues.push(`\\\\\"${id}\\\\\":\\\\\"${invoice[columnName.toLowerCase().replace(/\\s/g, '')]}\\\\\"`);\n          });\n          const columnValuesString = `{${columnValues.join(',')}}`;\n          const query = `mutation {\n            create_item(\n              board_id: ${boardId},\n              item_name: \"Invoices\",\n              column_values: \"${columnValuesString}\"\n            ) {\n              id\n            }\n          }`;\n          try {\n            const response = await fetch(\"https://api.monday.com/v2\", {\n              method: \"post\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n                'Authorization': `${token}`\n              },\n              body: JSON.stringify({\n                query: query\n              })\n            });\n            const res = await response.json();\n            console.log(res);\n          } catch (error) {\n            console.error(\"Error creating invoices\", error);\n          }\n        });\n        window.alert('Invoices imported successfully!');\n      } catch (error) {\n        console.error(\"Error fetching invoices:\", error);\n        window.alert('Failed to import invoices. Please try again.');\n      }\n    } else {\n      window.alert(`Board '${userInputBoardName}' not found. Cannot import invoices.`);\n    }\n  };\n  const createColumns = async () => {\n    const userInputBoardName = prompt('Please enter the board name for creating columns:');\n    if (!userInputBoardName) {\n      window.alert('Board name cannot be empty.');\n      return;\n    }\n    const boardId = await fetchBoardId(userInputBoardName.trim());\n    if (boardId) {\n      const columnsToCreate = ['Invoice Number', 'Reference', 'Status', 'Amount Due'];\n      let createdColumnsCount = 0;\n      let columnsExist = false;\n      try {\n        const response = await fetch(\"https://api.monday.com/v2\", {\n          method: 'post',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `${token}`\n          },\n          body: JSON.stringify({\n            query: `\n            {\n              boards(ids: ${boardId}) {\n                columns {\n                  id\n                  title\n                }\n              }\n            }\n          `\n          })\n        });\n        const res = await response.json();\n        const existingColumns = res.data.boards[0].columns.map(column => column.title);\n        for (const columnName of columnsToCreate) {\n          if (!existingColumns.includes(columnName)) {\n            const query = `\n            mutation {\n              create_column (\n                board_id: ${boardId},\n                title: \"${columnName}\",\n                column_type: text\n              ) {\n                id\n              }\n            }\n          `;\n            try {\n              const response = await fetch(\"https://api.monday.com/v2\", {\n                method: 'post',\n                headers: {\n                  'Content-Type': 'application/json',\n                  'Authorization': `${token}`\n                },\n                body: JSON.stringify({\n                  'query': query\n                })\n              });\n              const res = await response.json();\n              const {\n                id\n              } = res.data.create_column;\n              console.log(`Created column '${columnName}':`, id);\n              columnIDs.push({\n                columnName,\n                id\n              });\n              createdColumnsCount++;\n              if (createdColumnsCount === columnsToCreate.length) {\n                window.alert('All columns created successfully!');\n              }\n            } catch (error) {\n              console.error(`Error creating column '${columnName}':`, error);\n            }\n          } else {\n            console.log(`Column '${columnName}' already exists.`);\n            columnsExist = true;\n          }\n        }\n        if (columnsExist) {\n          window.alert('Columns already exist.');\n        }\n      } catch (error) {\n        console.error('Error fetching columns:', error);\n        window.alert('Failed to create columns. Please try again.');\n      }\n    } else {\n      window.alert(`Board '${userInputBoardName}' not found. Cannot create columns.`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isxeroauthorized ? /*#__PURE__*/_jsxDEV(MondayCard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 9\n    }, this) : isauthorized ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n        class: \"navbar navbar-expand-md   pt-5 pb-3  mb-5\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"container-xxl\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"./favicon.ico\",\n            alt: \"Logo\",\n            className: \" me-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            class: \"text-dark fs-4 fw-bold\",\n            children: \"Xero Integration\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"collapse navbar-collapse justify-content-end align-center \",\n            id: \"main-nav\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container  d-grid align-items-center\",\n        style: {\n          height: \" 60vh\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row justify-content-center align-items-center \",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-8 col-md-6 mb-3\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"card justify-content-center align-items-center d-grid border-0 shadow\",\n              style: {\n                width: '18 rem',\n                height: '300px'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"card-body \",\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  class: \"fw-bold mb-3 card-title \",\n                  children: \"Fetch your Invoices\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: fetchInvoices,\n                  className: \" btn btn-primary\",\n                  children: \"Import Invoices\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-8 col-md-6 mb-3\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"card justify-content-center align-items-center d-grid border-0 shadow\",\n              style: {\n                width: '18 rem',\n                height: '300px'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"card-body \",\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  class: \"fw-bold mb-3 card-title \",\n                  children: \"Create columns on monday\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: createColumns,\n                  className: \" btn btn-primary\",\n                  children: \"Create Columns\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(LandingPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 221,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\n;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","LandingPage","MondayCard","jsxDEV","_jsxDEV","Fragment","_Fragment","App","monday","mondaySdk","columnIDs","fetchBoardId","boardName","response","fetch","method","headers","token","body","JSON","stringify","query","res","json","console","log","foundBoard","data","me","boards","find","board","name","id","error","fetchInvoices","userInputBoardName","prompt","window","alert","boardId","trim","Invoices","invoices","forEach","invoice","columnValues","columnName","push","toLowerCase","replace","columnValuesString","join","createColumns","columnsToCreate","createdColumnsCount","columnsExist","existingColumns","columns","map","column","title","includes","create_column","length","children","isxeroauthorized","fileName","_jsxFileName","lineNumber","columnNumber","isauthorized","class","src","alt","className","style","height","width","onClick","_c","$RefreshReg$"],"sources":["/home/hp/monday-oauth (copy)/client/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from 'axios';\n\nimport './App.css';\n\nimport LandingPage from \"./components/LandingPage.js\"\nimport MondayCard  from \"./components/MondayCard.js\"\n//https://23332f08554e13c5.cdn2.monday.app\n//http://localhost:3000\nfunction App() {\n  const monday = mondaySdk();\n \n  let columnIDs = [];\n  \n\n\n  \n\n\n\n  const fetchBoardId = async (boardName) => {\n    try {\n      const response = await fetch(\"https://api.monday.com/v2\", {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `${token}`,\n        },\n        body: JSON.stringify({\n          query: `\n            {\n              me {\n                boards {\n                  id\n                  name\n                }\n              }\n            }\n          `,\n        }),\n      });\n      const res = await response.json();\n      console.log(res);\n      const foundBoard = res.data.me.boards.find(board => board.name === boardName);\n  \n      if (foundBoard) {\n        return foundBoard.id;\n      } else {\n        console.error(`Board '${boardName}' not found.`);\n        return null;\n      }\n    } catch (error) {\n      console.error('Error fetching board ID:', error);\n      return null;\n    }\n  };\n\n  const fetchInvoices = async () => {\n    const userInputBoardName = prompt('Please enter the board name for creating columns:');\n  \n    if (!userInputBoardName) {\n      window.alert('Board name cannot be empty.');\n      return;\n    }\n  \n   const  boardId = await fetchBoardId(userInputBoardName.trim());\n    if (boardId) {\n      try {\n        const response = await fetch(`http://localhost:3001/invoice`);\n        const data = await response.json();\n        \n        const Invoices = data.invoices;\n  \n        Invoices.forEach(async (invoice) => {\n          const columnValues = [];\n          columnIDs.forEach(({ id, columnName }) => {\n            columnValues.push(`\\\\\"${id}\\\\\":\\\\\"${invoice[columnName.toLowerCase().replace(/\\s/g, '')]}\\\\\"`);\n          });\n  \n          const columnValuesString = `{${columnValues.join(',')}}`;\n\n          const query = `mutation {\n            create_item(\n              board_id: ${boardId},\n              item_name: \"Invoices\",\n              column_values: \"${columnValuesString}\"\n            ) {\n              id\n            }\n          }`;\n        \n          try {\n            const response = await fetch(\"https://api.monday.com/v2\", {\n              method: \"post\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n                'Authorization': `${token}`,\n              },\n              body: JSON.stringify({\n                query: query,\n              }),\n            });\n            const res = await response.json();\n            console.log(res);\n          } catch (error) {\n            console.error(\"Error creating invoices\", error);\n          }\n        });\n        window.alert('Invoices imported successfully!');\n      } catch (error) {\n        console.error(\"Error fetching invoices:\", error);\n        window.alert('Failed to import invoices. Please try again.');\n      }\n    } else {\n      window.alert(`Board '${userInputBoardName}' not found. Cannot import invoices.`);\n    }\n  };\n\n  const createColumns = async () => {\n\n    const userInputBoardName = prompt('Please enter the board name for creating columns:');\n  \n  if (!userInputBoardName) {\n    window.alert('Board name cannot be empty.');\n    return;\n  }\n\n const  boardId = await fetchBoardId(userInputBoardName.trim());\n  if (boardId) {\n  \n    const columnsToCreate = ['Invoice Number', 'Reference', 'Status', 'Amount Due'];\n    let createdColumnsCount = 0;\n    let columnsExist = false;\n  \n    try {\n      const response = await fetch(\"https://api.monday.com/v2\", {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `${token}`,\n        },\n        body: JSON.stringify({\n          query: `\n            {\n              boards(ids: ${boardId}) {\n                columns {\n                  id\n                  title\n                }\n              }\n            }\n          `,\n        }),\n      });\n      const res = await response.json();\n  \n      const existingColumns = res.data.boards[0].columns.map(column => column.title);\n  \n      for (const columnName of columnsToCreate) {\n        if (!existingColumns.includes(columnName)) {\n          const query = `\n            mutation {\n              create_column (\n                board_id: ${boardId},\n                title: \"${columnName}\",\n                column_type: text\n              ) {\n                id\n              }\n            }\n          `;\n  \n          try {\n            const response = await fetch(\"https://api.monday.com/v2\", {\n              method: 'post',\n              headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `${token}`,\n              },\n              body: JSON.stringify({\n                'query': query,\n              }),\n            });\n            const res = await response.json();\n  \n            const { id } = res.data.create_column;\n            console.log(`Created column '${columnName}':`, id);\n            columnIDs.push({ columnName, id });\n  \n            createdColumnsCount++;\n  \n            if (createdColumnsCount === columnsToCreate.length) {\n              window.alert('All columns created successfully!');\n            }\n          } catch (error) {\n            console.error(`Error creating column '${columnName}':`, error);\n          }\n        } else {\n          console.log(`Column '${columnName}' already exists.`);\n          columnsExist = true;\n        }\n      }\n  \n      if (columnsExist) {\n        window.alert('Columns already exist.');\n      }\n    } catch (error) {\n      console.error('Error fetching columns:', error);\n      window.alert('Failed to create columns. Please try again.');\n    }\n  } else {\n    window.alert(`Board '${userInputBoardName}' not found. Cannot create columns.`);\n  }\n  };\n  \n\n\n\n\n  return (\n    <div>\n      {isxeroauthorized ? (\n        <MondayCard/>\n\n      ) : isauthorized ? (\n        <>\n          <nav class=\"navbar navbar-expand-md   pt-5 pb-3  mb-5\">\n            <div class=\"container-xxl\">\n              <img\n                src=\"./favicon.ico\" \n                alt=\"Logo\"\n                className=\" me-2\" \n              />\n              <span class=\"text-dark fs-4 fw-bold\">Xero Integration</span>\n\n              <div\n                class=\"collapse navbar-collapse justify-content-end align-center \"\n                id=\"main-nav\"\n              >\n               \n              </div>\n            </div>\n          </nav>\n\n          <div className=\"container  d-grid align-items-center\" style={{ height: \" 60vh\" }}>\n            <div className=\"row justify-content-center align-items-center \">\n              <div className=\"col-8 col-md-6 mb-3\">\n                <div class=\"card justify-content-center align-items-center d-grid border-0 shadow\" style={{ width: '18 rem', height: '300px' }}>\n                  <div class=\"card-body \">\n                    <h2 class=\"fw-bold mb-3 card-title \">Fetch your Invoices</h2>\n                    <button onClick={fetchInvoices} className=\" btn btn-primary\">\n                      Import Invoices\n                    </button>\n                  </div>\n                </div>\n              </div>\n              <div className=\"col-8 col-md-6 mb-3\">\n                <div class=\"card justify-content-center align-items-center d-grid border-0 shadow\" style={{ width: '18 rem', height: '300px' }}>\n                  <div class=\"card-body \">\n                    <h2 class=\"fw-bold mb-3 card-title \">Create columns on monday</h2>\n                    <button onClick={createColumns} className=\" btn btn-primary\">\n                      Create Columns\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n\n\n          \n        </>\n      ) : (\n      \n        <LandingPage/>\n      )}\n    </div>\n  );\n\n};\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}